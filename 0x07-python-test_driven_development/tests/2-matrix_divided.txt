The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``

------------------------

Importing method:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Basic int, float cases.

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

        >>> matrix_divided([[-2, 3, 4], [5, 6, 7]], 2)
        [[-1.0, 1.5, 2.0], [2.5, 3.0, 3.5]]

        >>> matrix_divided([[2, -3 ,4], [5, 6, 7]], 4)
        [[0.5, -0.75, 1.0], [1.25, 1.5, 1.75]]

        >>> matrix_divided([[2, -3, -4],[5, 6, 7]], 10)
        [[0.2, -0.3, -0.4], [0.5, 0.6, 0.7]]

        >>> matrix_divided([[2, 3 , 4],[-5, 6, 7]], 4)
        [[0.5, 0.75, 1.0], [-1.25, 1.5, 1.75]]

        >>> matrix_divided([[2, 3 , 4],[5, -6, 7]], 4)
        [[0.5, 0.75, 1.0], [1.25, -1.5, 1.75]]

        >>> matrix_divided([[2, 3 , 4],[5, 6, -7]], 4)
        [[0.5, 0.75, 1.0], [1.25, 1.5, -1.75]]

        >>> matrix_divided([[-2, -3 , -4],[-5, -6, -7]], 4)
        [[-0.5, -0.75, -1.0], [-1.25, -1.5, -1.75]]

        >>> matrix_divided([[78.3, 10.7, 12.766], [2.2, 91.14, 222.3]], 10)
        [[7.83, 1.07, 1.28], [0.22, 9.11, 22.23]]

        >>> matrix_divided([[-78.3, 10.7, 12.766], [2.2, 91.14, 222.3]], 10)
        [[-7.83, 1.07, 1.28], [0.22, 9.11, 22.23]]

        >>> matrix_divided([[78.3, -10.7, 12.766], [2.2, 91.14, 222.3]], 10)
        [[7.83, -1.07, 1.28], [0.22, 9.11, 22.23]]

        >>> matrix_divided([[78.3, 10.7, -12.766], [2.2, 91.14, 222.3]], 10)
        [[7.83, 1.07, -1.28], [0.22, 9.11, 22.23]]

        >>> matrix_divided([[78.3, 10.7, 12.766], [-2.2, 91.14, 222.3]], 10)
        [[7.83, 1.07, 1.28], [-0.22, 9.11, 22.23]]

        >>> matrix_divided([[78.3, 10.7, 12.766], [2.2, -91.14, 222.3]], 10)
        [[7.83, 1.07, 1.28], [0.22, -9.11, 22.23]]

        >>> matrix_divided([[78.3, 10.7, 12.766], [2.2, 91.14, -222.3]], 10)
        [[7.83, 1.07, 1.28], [0.22, 9.11, -22.23]]

        >>> matrix_divided([[-78.3, -10.7, -12.766], [-2.2, -91.14, -222.3]], 10)
        [[-7.83, -1.07, -1.28], [-0.22, -9.11, -22.23]]

Parameter div cases.

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
        Traceback (most recent call last):
        TypeError: div must be a number

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -10)
        [[-0.1, -0.2, -0.3], [-0.4, -0.5, -0.6]]

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
        Traceback (most recent call last):
        ZeroDivisionError: division by zero

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Holberton")
        Traceback (most recent call last):
        TypeError: div must be a number

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
        [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 999999999999999999999)
        [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Parameter matrix cases.

        >>> matrix_divided()
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

        >>> matrix_divided([[], [4, 5, 6]], 10)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[1, "Holberton", 3], [4, 5, 6]], 10)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([], 10)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[1, 2, 3], [2, 3, 4, 5]], 10)
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

        >>> matrix_divided(1, 2, 3)
        Traceback (most recent call last):
        TypeError: matrix_divided() takes 2 positional arguments but 3 were given
